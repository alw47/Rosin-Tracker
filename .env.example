# Rosin Tracker Environment Configuration
# Copy this file to .env and update the values for your deployment

# Database Configuration
# Required: PostgreSQL connection string
# NOTE: Installation script will prompt for custom username/password during fresh install
DATABASE_URL=postgresql://your_db_username:your_db_password@localhost:5432/rosin_tracker

# Database connection details (automatically set if using provided scripts)
PGHOST=localhost
PGPORT=5432
PGDATABASE=rosin_tracker
PGUSER=your_db_username
PGPASSWORD=your_db_password

# Authentication Settings (Optional)
# Set AUTH_PASSWORD=YES to enable login protection for self-hosting security
# Leave empty or comment out to run without authentication
# AUTH_PASSWORD=YES

# Session Security (Recommended for production)
# Generate a secure random string for session encryption
# You can use: openssl rand -base64 32
# SESSION_SECRET=your-random-session-secret-here

# Application Settings
NODE_ENV=production
PORT=5000

# Installation Script Setup:
# The install.sh script will prompt you during fresh installation for:
# - Database Username: Enter your preferred username (default: rosin_user)
# - Database Password: Enter your password or leave empty for auto-generation
# - Authentication: Choose whether to enable secure login (y/n)
# - Session Secret: Automatically generated for security
# All values will be automatically saved to your .env file

# Example values for different deployment scenarios:

# For local development (authentication disabled):
# AUTH_PASSWORD=
# NODE_ENV=development

# For secure self-hosting (authentication enabled):
# AUTH_PASSWORD=YES
# SESSION_SECRET=abcd1234randomsecretstring5678efgh
# NODE_ENV=production

# Notes:
# - DATABASE_URL is required and must point to a valid PostgreSQL database
# - AUTH_PASSWORD=YES enables authentication (leave empty to disable)
# - SESSION_SECRET should be a random string for production security
# - After enabling AUTH_PASSWORD=YES, create your user account via Settings page